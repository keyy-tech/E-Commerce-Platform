# Generated by Django 5.1.3 on 2024-11-16 22:33

import Products.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.CharField(default=Products.models.generate_product_id, editable=False, max_length=10, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=300)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('model_number', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock_quantity', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('availability_status', models.CharField(blank=True, max_length=50, null=True)),
                ('image_1', models.ImageField(default='product_images/default.jpg', upload_to='product_images/')),
                ('image_2', models.ImageField(blank=True, default='product_images/default.jpg', null=True, upload_to='product_images/')),
                ('image_3', models.ImageField(blank=True, default='product_images/default.jpg', null=True, upload_to='product_images/')),
                ('image_4', models.ImageField(blank=True, default='product_images/default.jpg', null=True, upload_to='product_images/')),
                ('image_5', models.ImageField(blank=True, default='product_images/default.jpg', null=True, upload_to='product_images/')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('dimensions', models.CharField(blank=True, max_length=100, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('material', models.CharField(blank=True, max_length=100, null=True)),
                ('warranty_period', models.CharField(blank=True, max_length=50, null=True)),
                ('power_consumption', models.CharField(blank=True, max_length=50, null=True)),
                ('battery_life', models.CharField(blank=True, max_length=50, null=True)),
                ('specifications', models.JSONField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Products.category')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Products.producttype')),
                ('tags', models.ManyToManyField(blank=True, to='Products.tag')),
            ],
        ),
    ]
